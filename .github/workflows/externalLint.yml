on:
  workflow_call:
    inputs:
      packageName:
        description: 'The npm package that this repository publishes.  ex: @salesforce/core'
        required: true
        type: string
      externalProjectGitUrl:
        description: 'The url that will be cloned.  This contains the NUTs you want to run.  Ex: https://github.com/salesforcecli/plugin-user'
        type: string
        required: true
      command:
        required: false
        type: string
        default: yarn eslint "src/**/*.ts"
        description: 'command to execute (ex: yarn lint)'
      preBuildCommands:
        required: false
        description: 'commands to run before the build...for example, to delete known module conflicts'
        type: string
        default: 'echo "no preBuildCommands passed"'
      postBuildCommands:
        required: false
        description: 'script to run after the build'
        type: string
        default: 'echo "no postBuildCommands passed"'
      preExternalBuildCommands:
        required: false
        description: 'commands to run before the build of the external repo...for example, to delete known module conflicts'
        type: string
        default: 'echo "no preExternalBuildCommands passed"'

jobs:
  external-lint:
    name: ${{ inputs.command }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.nodeVersion }}
      - run: git clone ${{ inputs.externalProjectGitUrl}} $(pwd)
      - run: yarn install  --network-timeout 600000
      - name: swap this dependency for the version on this branch
        run: |
          yarn remove ${{ inputs.packageName }}
          yarn add ${{ github.repository }}#${{ github.sha }} --dev
      - name: install/build ${{ inputs.packageName}} in node_modules
        working-directory: node_modules/${{ inputs.packageName }}
        run: |
          yarn install  --network-timeout 600000
          ${{ inputs.preBuildCommands }}
          yarn build
          ${{ inputs.postBuildCommands }}
      - name: preExternalBuildCommands
        run: ${{ inputs.preExternalBuildCommands }}
      - name: lint
        run: ${{ inputs.command }}
